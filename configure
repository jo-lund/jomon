#!/usr/bin/env bash
#
# Homemade configure script for monitor. This is not generated by autoconf.
#

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
NORMAL=$(tput sgr0)
if [ -z "$CC" ]; then
   CC="gcc"
fi
GEOIP_PATH="/usr/share/GeoIP"
GEOIP_DB="GeoIPCity.dat"
BUILD=".build_$$"
PREFIX="/usr/local"
HAVE_GEOIP=1
HAVE_OBSTACK=1
VERSION="0.1.0"
ok="${GREEN}OK$NORMAL"
fail="${RED}FAIL$NORMAL"

usage()
{
    echo "Usage: ./configure [option]"
    echo ""
    echo "   --disable-geoip         : Build without libGeoIP"
    echo "   --set-geoip-path <path> : Set the default GeoIP path"
    echo "                             [$GEOIP_PATH]"
    echo "   --prefix <PREFIX>       : Install files in PREFIX"
    echo "                             [$PREFIX]"
    echo "   -h, --help              : Display help"
    exit 0
}

check_gcc()
{
    printf "[*] %-30s" "Checking for $CC... "

    echo "int main() { return 0; }" > "$BUILD.c"
    $CC "$BUILD.c" -o "$BUILD" &> /dev/null

    if [ ! -x "$BUILD" ]; then
        printf "[$fail]\n\n"
        if [[ $CC == "gcc" || $CC == "clang" ]]; then
            printf "You need a functioning install of $CC. "
            printf "This can be installed with \"pacman -S $CC\" or equivalent "
            printf "command for your distribution.\n"
        fi
        rm -f "$BUILD.c" "$BUILD"
        exit 1;
    fi

    rm -f "$BUILD.c" "$BUILD"
    printf "[$ok]\n"
}

check_ncurses()
{
    printf "[*] %-30s" "Checking for libncurses... "

    echo -e "#include <ncurses.h>\nint main() { initscr(); endwin(); }" > "$BUILD.c"
    $CC "$BUILD.c" -o "$BUILD" -lncurses &> /dev/null

    if [ ! -x "$BUILD" ]; then
        printf "[$fail]\n\n"
        printf "You need a functioning install of libncurses. "
        printf "This can be installed with \"pacman -S ncurses\" or equivalent "
        printf "command for your distribution.\n"
        rm -f "$BUILD.c" "$BUILD"
        exit 1
    fi

    rm -f "$BUILD.c" "$BUILD"
    printf "[$ok]\n"
}

check_geoip()
{
    printf "[*] %-30s" "Checking for libGeoIP... "

    cat >> "$BUILD.c" <<EOF
    #include <GeoIP.h>
    int main()
    {
        GeoIP *gip = GeoIP_open("$GEOIP_PATH/$GEOIP_DB", GEOIP_STANDARD);
        GeoIP_delete(gip);
    }
EOF
    $CC "$BUILD.c" -o "$BUILD" -lGeoIP  &> /dev/null

    if [ ! -x "$BUILD" ]; then
        printf "[$fail]\n\n"
        printf "You need a functioning install of libGeoIP. "
        printf "This can be installed with \"pacman -S geoip geoip-database "
        printf "geoip-database-extra\" or equivalent command for your distribution.\n"
        rm -f "$BUILD.c" "$BUILD"
        exit 1
    fi

    rm -f "$BUILD.c" "$BUILD"
    printf "[$ok]\n"
}

check_re2c()
{
    printf "[*] %-30s" "Checking for re2c... "

    command -v re2c >/dev/null ||
        {
            printf "[$fail]\n\n"
            printf "re2c needs to be installed. This can be installed with ";
            printf "\"pacman -S re2c\" or equivalent command for your distribution.\n";
            exit 1;
        }
    printf "[$ok]\n"
 }

check_missing()
{
    echo -e "#include <obstack.h>\nint main() { struct obstack s; }" > "$BUILD.c"
    $CC "$BUILD.c" -o "$BUILD" &> /dev/null
    if [ ! -x "$BUILD" ]; then
        HAVE_OBSTACK=0
    fi
    rm -f "$BUILD.c" "$BUILD"
}

generate_config()
{
    echo "[*] Generating config..."
    echo "/* Autogenerated - do not edit */" > config.h
    echo >> config.h
    echo "#ifndef CONFIG_H" >> config.h
    echo "#define CONFIG_H" >> config.h
    echo >> config.h

    echo "# Autogenerated - do not edit" > config.mk
    echo >> config.mk
    echo "CC=$CC" >> config.mk
    echo "HAVE_GEOIP=$HAVE_GEOIP" >> config.mk
    if [[ "$HAVE_GEOIP" == 1 ]]; then
        echo "#define GEOIP_PATH \"$GEOIP_PATH/$GEOIP_DB\"" >> config.h
    fi
    echo "PREFIX=$PREFIX" >> config.mk
    echo "HAVE_OBSTACK=$HAVE_OBSTACK" >> config.mk
    echo "VERSION=\"$VERSION\"" >> config.mk
    echo >> config.h
    echo "#endif" >> config.h
}

while [ $# -gt 0 ]; do
    case "$1" in
	-h | --help)
	    usage
	    ;;
        --disable-geoip)
            HAVE_GEOIP=0
            ;;
        --set-geoip-path)
            shift
            GEOIP_PATH=$1
            ;;
        --prefix)
            shift
            PREFIX=$1
            ;;
        *)
            echo "Invalid option. Use -h for help"
            exit 1;
            ;;
    esac
    shift
done

check_gcc
check_ncurses
if [[ "$HAVE_GEOIP" == 1 ]]; then
    check_geoip
fi
check_re2c
check_missing
generate_config
